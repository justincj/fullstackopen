{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","services/login.js","components/LoginForm.js","components/Togglable.js","components/NoteForm.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","Notification","message","Footer","style","color","fontStyle","fontSize","login","credentials","LoginForm","handleSubmit","useState","username","setUsername","password","setPassword","onSubmit","event","preventDefault","type","value","name","onChange","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","NoteForm","createNote","newNote","setNewNote","console","log","Math","random","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","user","setUser","noteFormRef","useRef","useEffect","noteServices","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","noteObject","current","returnedNote","concat","notesToShow","filter","handleLogin","userObject","loginService","setItem","stringify","setTimeout","map","key","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87a7672e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  setToken,\n};\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\nconst baseUrl = \"/api/login\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\nexport default { login };\n","import React, { useState } from \"react\";\n\nconst LoginForm = ({ handleSubmit }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    handleSubmit({\n      username,\n      password,\n    });\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState, useImperativeHandle } from \"react\";\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility,\n    };\n  });\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>Cancel</button>\n      </div>\n    </div>\n  );\n});\n\nexport default Togglable;\n","import React, { useState } from \"react\";\n\nconst NoteForm = ({ createNote }) => {\n  const [newNote, setNewNote] = useState(\"\");\n\n  const addNote = (event) => {\n    event.preventDefault();\n    console.log(newNote);\n    createNote({\n      content: newNote,\n      important: Math.random() > 0.5,\n    });\n    setNewNote(\"\");\n  };\n  return (\n    <div>\n      <h2>Create a new note</h2>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={({ target }) => setNewNote(target.value)}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default NoteForm;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Note from \"./components/Note\";\nimport noteServices from \"./services/notes\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\nimport loginService from \"./services/login\";\nimport LoginForm from \"./components/LoginForm\";\nimport Togglable from \"./components/Togglable\";\nimport NoteForm from \"./components/NoteForm\";\n\nexport const App = () => {\n  const [notes, setNotes] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [user, setUser] = useState(null);\n\n  const noteFormRef = useRef();\n\n  useEffect(() => {\n    noteServices.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedNoteappUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteServices.setToken(user.token);\n    }\n  }, []);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteServices\n      .update(id, changedNote)\n      .then((returnedNote) =>\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n      )\n      .catch((error) => {\n        setErrorMessage(`Note ${note.content} was already removed from server`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n  };\n\n  const addNote = async (noteObject) => {\n    noteFormRef.current.toggleVisibility();\n    const returnedNote = await noteServices.create(noteObject);\n    console.log(returnedNote);\n    setNotes(notes.concat(returnedNote));\n  };\n  const noteForm = () => (\n    <Togglable buttonLabel=\"new Note\" ref={noteFormRef}>\n      <NoteForm createNote={addNote} />\n    </Togglable>\n  );\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  const handleLogin = async (userObject) => {\n    try {\n      const user = await loginService.login(userObject);\n      window.localStorage.setItem(\"loggedNoteappUser\", JSON.stringify(user));\n      noteServices.setToken(user.token);\n      setUser(user);\n    } catch (exception) {\n      setErrorMessage(\"wrong credentials\");\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const loginForm = () => {\n    return (\n      <Togglable buttonLabel=\"login\">\n        <LoginForm handleSubmit={handleLogin} />\n      </Togglable>\n    );\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <p>{user.name} logged-in</p>\n          {noteForm()}\n        </div>\n      )}\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            note={note}\n            key={note.id}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n//eslint-disable-next-line\nimport index from \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}