{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteServices","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","length","Math","random","date","Date","toISOString","concat","value","onChange","e","target","type","ReactDOM","render","document","getElementById"],"mappings":"wOAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCW3B,EAfA,WAEb,OADgBK,IAAMC,IAHR,cAICC,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa9B,EAVA,SAACC,GAEd,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCN9BK,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAEF,yBAAKb,UAAU,SAASa,ICYlBC,EAhBA,WAMb,OACE,yBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIR,6BACA,uGCqESC,EA1EI,WAAO,IAAD,EACGC,mBAAS,IADZ,mBAChBC,EADgB,KACTC,EADS,OAEOF,mBAAS,IAFhB,mBAEhBG,EAFgB,KAEPC,EAFO,OAGOJ,oBAAS,GAHhB,mBAGhBK,EAHgB,KAGPC,EAHO,OAIiBN,mBAAS,MAJ1B,mBAIhBO,EAJgB,KAIFC,EAJE,KAMvBC,qBAAU,WACRC,IAAsBzB,MAAK,SAAC0B,GAC1BT,EAASS,QAEV,IAEH,IA+BMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAACrC,GAAD,OAA6B,IAAnBA,EAAKG,aAEhC,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcc,QAASc,IACvB,6BACE,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYE,KAAI,SAACtC,GAAD,OACf,kBAAC,EAAD,CACEA,KAAMA,EACNuC,IAAKvC,EAAKc,GACVb,iBAAkB,kBAjDD,SAACa,GAC1B,IAAMd,EAAOyB,EAAMe,MAAK,SAACC,GAAD,OAAOA,EAAE3B,KAAOA,KAClC4B,EAAW,2BAAQ1C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD+B,EACUpB,EAAI4B,GACXjC,MAAK,SAACkC,GAAD,OACJjB,EAASD,EAAMa,KAAI,SAACtC,GAAD,OAAWA,EAAKc,KAAOA,EAAKd,EAAO2C,SAEvDC,OAAM,SAACC,GACNb,EAAgB,QAAD,OAAShC,EAAKK,QAAd,qCACfyC,YAAW,WACTd,EAAgB,QACf,QAoCyBe,CAAmB/C,EAAKc,WAItD,0BAAMkC,SApCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBrC,GAAIW,EAAM2B,OAAS,EACnB/C,QAASsB,EACTxB,UAAWkD,KAAKC,SAAW,GAC3BC,MAAM,IAAIC,MAAOC,eAEnBvB,EAAoBiB,GAAY1C,MAAK,SAACkC,GACpCjB,EAASD,EAAMiC,OAAOf,IACtBf,EAAW,SA2BT,2BAAO+B,MAAOhC,EAASiC,SAAU,SAACC,GAAD,OAAOjC,EAAWiC,EAAEC,OAAOH,UAC5D,4BAAQI,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MCtENC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7784b850.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteServices from \"./services/notes\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\n\nexport const App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteServices.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteServices\n      .update(id, changedNote)\n      .then((returnedNote) =>\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n      )\n      .catch((error) => {\n        setErrorMessage(`Note ${note.content} was already removed from server`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n  };\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      id: notes.length + 1,\n      content: newNote,\n      important: Math.random() < 0.5,\n      date: new Date().toISOString(),\n    };\n    noteServices.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            note={note}\n            key={note.id}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={(e) => setNewNote(e.target.value)} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport index from \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}